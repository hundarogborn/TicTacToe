plugins {
    // Add the shadow plugin, so that we can create uberjar releases
    // that package all their dependencies
    id "com.github.johnrengelman.shadow" version "1.2.3"
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Use Jacoco for code coverage testing
apply plugin: 'jacoco'

// We want to use Java 8
sourceCompatibility = 1.8

// Apply the application plugin and set our main class
apply plugin: 'application'
mainClassName = 'is.ru.tictactoe.Main'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The web ui uses Spark + freemarker
    compile "com.sparkjava:spark-core:2.5"
    compile "com.sparkjava:spark-template-freemarker:2.3"
    
    // The production code uses the SLF4J logging API at compile time
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

// We want to print all the tests that fail, so that Travis will show us actionable output
// if anything dies.
test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
    }
}

task stage(dependsOn: ['clean', 'shadowJar'])


// Enable XML report
jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}

// And run jacoco during check phase
check.dependsOn jacocoTestReport
